#Remember the macports command:  port contents packageName

THIRD_PARTY_INCS=[
			'/Users/dtrimarchi/third_party/eigen-3.2.7',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/UMFPACK/Include',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/SuiteSparse_config',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/AMD/Include',
			'/Users/dtrimarchi/third_party/boost_1_60_0',
			'/Users/dtrimarchi/third_party/nlopt-2.4.2/api',
			'/opt/local/include',												# macPorts and nlopt include path
			'/opt/local/share/plplot5.11.1/examples/c++',							#include path for plplot example
			'/opt/local/include/plplot'
		]



THIRD_PARTY_LIBS=[
			'amd',
			'cholmod',
			'suitesparseconfig',
			'colamd',
			'umfpack',
			'plplotcxx',  #libs required by plplot
			'plplot',
			'nlopt',
			'BLAS',
			'boost_system',
			'libboost_filesystem'
		]
			
					
THIRD_PARTY_LIBPATH=[
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/AMD/Lib',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/CHOLMOD/Lib',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/SuiteSparse_config',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/COLAMD/Lib',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/UMFPACK/Lib',
			'/Users/dtrimarchi/third_party/nlopt-2.4.2/libs',
			'/System/Library/Frameworks/Accelerate.framework/Versions/Current/Frameworks/vecLib.framework/Versions/A',
			'/opt/local/lib', # macPorts and lnopt lib path
			'/Users/dtrimarchi/third_party/boost_1_60_0/bin.v2/libs/system/build/darwin-4.2.1/release/link-static/threading-multi',
			'/Users/dtrimarchi/third_party/boost_1_60_0/bin.v2/libs/filesystem/build/darwin-4.2.1/release/link-static/threading-multi']


#Compile Debug mode
#env.Append(CCFLAGS= '-g')
#env.Append(CPPFLAGS ='-Wc++11-extensions')

#warning: use of enumeration in a nested name specifier is a
#      C++11 extension [-Wc++11-extensions]

#===============================================================================
# env = Environment()
# conf = Configure(env)
# if not conf.CheckLib('nlopt'):
# 	print 'Did not find libnlopt.a or nlopt.lib, exiting!'
# 	Exit(1)
# env = conf.Finish()
#===============================================================================
# Get the environement 
env = DefaultEnvironment()

# Do some work to produce the version info
import subprocess
import time
from shutil import copyfile

currentBranch = (subprocess.check_output(["hg", "branch"]).rstrip())
currentRevNumber=(subprocess.check_output(["hg", "identify","-n"]).rstrip())
currentHash = (subprocess.check_output(["hg", "id","-i"]).rstrip())
buildDate = time.strftime("%c").rstrip()

# Get the full abs path of the file in the src tree and produce the 
# path of the same file with the timestamp
srcFile= str(File('Version.prototypeCpp').srcnode())
destFile= Dir('.').srcnode().abspath +'/Version.cpp'

# Copy the Version.prototypeCpp to Version.cpp
copyfile(srcFile,destFile)
 
# gsed currentBranch, currentHash, buildDate
newText=""
with open(destFile) as f:
	newText=f.read()
	newText= newText.replace("currentBranch_stringVar", currentBranch ) 
	newText= newText.replace("currentRevNumber_stringVar", currentRevNumber )
	newText= newText.replace("currentHash_stringVar", currentHash )
	newText= newText.replace("buildDate_stringVar", buildDate )
	f.close()

with open(destFile, "w") as f:
    f.write(newText)
    f.close()

env.Append(LINKFLAGS = ['-install_name /Users/dtrimarchi/third_party/boost_1_60_0/bin.v2/libs/filesystem/build/darwin-4.2.1/release/threading-multi/libboost_filesystem.dylib'])


# Build
env.Program('VPP', Glob('*.cpp'),
		CPPPATH = THIRD_PARTY_INCS,
		LIBS=THIRD_PARTY_LIBS,
		LIBPATH=THIRD_PARTY_LIBPATH
	)

# And now proceed to the subFolders
SConscript('''unitTest/SConscript'''.split())

# Add a runTest target that allows running the tests
#if 'runTest' in COMMAND_LINE_TARGETS:
 #       Default(Program('foo.c'))
  #      Program('bar.c')
# https://bitbucket.org/scons/scons/wiki/UnitTests

