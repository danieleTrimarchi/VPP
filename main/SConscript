#Remember the macports command:  port contents packageName

THIRD_PARTY_INCS=[
			'/Users/dtrimarchi/third_party/eigen-3.2.7',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/UMFPACK/Include',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/SuiteSparse_config',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/AMD/Include',
			'/Users/dtrimarchi/third_party/boost_1_60_0',
			'/Users/dtrimarchi/third_party/nlopt-2.4.2/api',
			'/opt/local/include',												# macPorts and nlopt include path
			'/opt/local/share/plplot5.11.1/examples/c++',							#include path for plplot example
			'/opt/local/include/plplot'
		]



THIRD_PARTY_LIBS=[
			'amd',
			'cholmod',
			'suitesparseconfig',
			'colamd',
			'umfpack',
			'plplotcxx',  #libs required by plplot
			'plplot',
			'nlopt',
			'BLAS'
		]
			
					
THIRD_PARTY_LIBPATH=[
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/AMD/Lib',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/CHOLMOD/Lib',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/SuiteSparse_config',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/COLAMD/Lib',
			'/Users/dtrimarchi/third_party/SuiteSparse-4.5.2/UMFPACK/Lib',
			'/Users/dtrimarchi/third_party/nlopt-2.4.2/libs',
			'/System/Library/Frameworks/Accelerate.framework/Versions/Current/Frameworks/vecLib.framework/Versions/A',
			'/opt/local/lib' # macPorts and lnopt lib path
		]


#This must be a way to define the path where the executable searches for the dyLib, but for the moment it does not seems to work
env = DefaultEnvironment()


#Compile Debug mode
#env.Append(CCFLAGS= '-g')
#env.Append(CPPFLAGS ='-Wc++11-extensions')

#warning: use of enumeration in a nested name specifier is a
#      C++11 extension [-Wc++11-extensions]

#===============================================================================
# env = Environment()
# conf = Configure(env)
# if not conf.CheckLib('nlopt'):
# 	print 'Did not find libnlopt.a or nlopt.lib, exiting!'
# 	Exit(1)
# env = conf.Finish()
#===============================================================================
    
env.Program('VPP', Glob('*.cpp'),
		CPPPATH = THIRD_PARTY_INCS,
		LIBS=THIRD_PARTY_LIBS,
		LIBPATH=THIRD_PARTY_LIBPATH
	)
