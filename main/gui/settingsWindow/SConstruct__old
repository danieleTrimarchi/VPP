import os
import subprocess

# Define a common build environment
common_env = Environment()  

#qtdir='/usr/local/Cellar/qt5/5.7.0'
qtdir = '/Users/dtrimarchi/third_party/Qt/5.9.1'
qtEnv = common_env.Clone()

#=======================================================

def fixDynamicLibPath(self,source,target,env):

    # Get the frameworks, the references of which are to be changed by install_name_tool
    QtFrameworkList= self.qtFrameworks
    
    # Loop on the frameworks
    for iFramework in QtFrameworkList: 

        print "RUNNING : "
        print ('install_name_tool -change '
               '@rpath/{}.framework/Versions/5/{} '
               '@executable_path/{}.framework/Versions/Current/{} '
               'qtTest'.format( 
                        iFramework,iFramework,
                        iFramework,iFramework
                        )
            )

        # Also change the reference to the frameworks from @rpath to @executable_path
        p = subprocess.Popen('install_name_tool -change '
                             '@rpath/{}.framework/Versions/5/{} '
                             '@executable_path/{}.framework/Versions/Current/{} '
                             'qtTest'.format( 
                                             iFramework,iFramework,
                                             iFramework,iFramework
                                             ), 
                             shell=True )
        p.wait()
        
qtEnv.AddMethod(fixDynamicLibPath, 'fixDynamicLibPath')


#============


qtEnv['QT5DIR']=qtdir

qtEnv['ENV']['PKG_CONFIG_PATH'] = [ os.path.join("/Users/dtrimarchi/VPP",'site_scons','qtPkgConfig') ]

#qtEnv['ENV']['PATH'] += ':/opt/local/bin:/usr/local/Cellar/qt5/5.7.0/bin'
qtEnv['ENV']['PATH'] += ':/opt/local/bin:'+os.path.join(qtdir,'clang_64','bin:')+os.path.join(qtdir,'clang_64','lib')
                  
# This is for http://stackoverflow.com/questions/37897209/qt-requires-c11-support-make-error
qtEnv['CXXFLAGS'] +=  ['-std=c++11']

qtEnv.Tool('qt5')

qtEnv.qtFrameworks = [
                      'QtCore',
                      'QtGui',
                      'QtWidgets',
                      'QtNetwork',
                      'QtDataVisualization'
                      ]

qtEnv.EnableQt5Modules(qtEnv.qtFrameworks)

QT_LIBS=[ ]                     


QT_INCS= ['/usr/local/Cellar/qt5/5.7.0/include/QtWidgets']


QT_LIBPATH= [ os.path.join(qtdir,'clang_64','lib')]

print "qtEnv = ", qtEnv['RPATH']

qtTestProgram = qtEnv.Program('qtTest', Glob('*.cpp'), #+Glob('*.qrc'),
                                CPPPATH = QT_INCS,
                                LIBS=QT_LIBS,
                                LIBPATH=QT_LIBPATH
                                )

fixDynamicLibPath_command = Command('fixDynamicLibPath', [], qtEnv.fixDynamicLibPath)
Depends( fixDynamicLibPath_command, qtTestProgram )
Default( fixDynamicLibPath_command )

