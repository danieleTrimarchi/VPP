# Do some work to produce the version info
import time
from shutil import copyfile
import subprocess

currentBranch = (subprocess.check_output(["hg", "branch"]).rstrip())
currentRevNumber=(subprocess.check_output(["hg", "identify","-n"]).rstrip())
currentHash = (subprocess.check_output(["hg", "id","-i"]).rstrip())
buildDate = time.strftime("%c").rstrip()

# Get the full abs path of the file in the src tree and produce the 
# path of the same file with the timestamp
srcFile= str(File('Version.prototypeCpp').srcnode())
destFile= Dir('.').srcnode().abspath +'/Version.cpp'

# Copy the Version.prototypeCpp to Version.cpp
copyfile(srcFile,destFile)

# gsed currentBranch, currentHash, buildDate
newText=""
with open(destFile) as f:
    newText=f.read()
    newText= newText.replace("currentBranch_stringVar", currentBranch ) 
    newText= newText.replace("currentRevNumber_stringVar", currentRevNumber )
    newText= newText.replace("currentHash_stringVar", currentHash )
    newText= newText.replace("buildDate_stringVar", buildDate )
    f.close()

with open(destFile, "w") as f:
    f.write(newText)
    f.close()

# ---

# Import the environement
Import('env')

# Clone the external environment
localEnv = env.Clone()

# Get the CPPPATH of the external world
cppPath= localEnv['CPPPATH']

# Produce and return the objects to be used to link the main program
obj = localEnv.Object( Glob('*.cpp'), 
                       CPPPATH=cppPath 
                       )
Return('obj')


